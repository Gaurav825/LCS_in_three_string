int LCSof3 (string A, string B, string C, int n1, int n2, int n3)
{
    // your code here used 3-d dp
    int L[n1+1][n2+1][n3+1];
    int i,j,k;
    for(int i=0; i<=n1; i++)
    {
        for(int j=0; j<=n2; j++)
        {
            for(int k=0; k<=n3; k++)
            {
                if(i==0 or j==0 or k==0)
                {
                    L[i][j][k]=0;
                }
                else if(A[i-1]==B[j-1] && C[k-1]==B[j-1])
                {
                    L[i][j][k]=1+L[i-1][j-1][k-1];
                    
                }
                else
                {
                    L[i][j][k]=max(L[i-1][j][k],max(L[i][j-1][k],L[i][j][k-1]));
                }
            }
        }
    }
    return L[n1][n2][n3];